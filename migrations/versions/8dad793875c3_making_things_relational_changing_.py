"""making things relational. changing author on post to foreign key and tags, categories too

Revision ID: 8dad793875c3
Revises: 7f12ae9750a9
Create Date: 2025-02-05 00:06:15.329640

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8dad793875c3'
down_revision = '7f12ae9750a9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('post_categories',
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], )
    )
    op.create_table('post_tags',
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], )
    )
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.create_unique_constraint('categories_name', ['name'])

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.alter_column('tags',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.create_foreign_key('post_authors', 'users', ['author'], ['id'])

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.create_unique_constraint('tags_name', ['name'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('tags',
               existing_type=sa.TEXT(),
               nullable=True)

    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    op.drop_table('post_tags')
    op.drop_table('post_categories')
    # ### end Alembic commands ###
